<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-11-20T17:53:12+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Lawrence Borst Blog</title><entry><title type="html">Lagrange interpolation</title><link href="http://localhost:4000/2020/11/15/Lagrange-Interpolation.html" rel="alternate" type="text/html" title="Lagrange interpolation" /><published>2020-11-15T00:00:00+01:00</published><updated>2020-11-15T00:00:00+01:00</updated><id>http://localhost:4000/2020/11/15/Lagrange%20Interpolation</id><content type="html" xml:base="http://localhost:4000/2020/11/15/Lagrange-Interpolation.html">&lt;p&gt;Perhaps the most straightforward $\gamma=\lim_{n\to\infty}\left(\sum_{k=1}^n\frac1k-ln(n)\right)$ interpolation method is Lagrange interpolation. We shall look at
a derivation of the formula for an $n$th degree polynomial that passes through $n-1$ points.&lt;/p&gt;

&lt;p&gt;The intuition&lt;/p&gt;</content><author><name>Lawrence Borst</name></author><summary type="html">Perhaps the most straightforward $\gamma=\lim_{n\to\infty}\left(\sum_{k=1}^n\frac1k-ln(n)\right)$ interpolation method is Lagrange interpolation. We shall look at a derivation of the formula for an $n$th degree polynomial that passes through $n-1$ points.</summary></entry></feed>